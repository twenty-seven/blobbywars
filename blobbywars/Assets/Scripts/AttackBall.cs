//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18444
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections;
using UnityEngine.Networking;

namespace BlobWars
{
	public class AttackBall : NetworkBehaviour
	{
		[SyncVar]
		Vector3	destination;

		public float speed = 50;

		private int damage;

		string blobUid;

		/// <summary>
		/// Attacks at the specified location with damage.
		/// </summary>
		/// <param name="location">Location.</param>
		/// <param name="damage">Damage.</param>
		[Server]
		public void Attack (Vector3 location, int damage, string blobUid)
		{
			this.damage = damage;
			this.destination = location;
			this.blobUid = blobUid;
		}

		/// <summary>
		/// Attacks at current Location.
		/// </summary>
		[Server]
		private void Attack() {
			//Destroy(this.gameObject, 0);
			NetworkServer.Destroy (this.gameObject);
			//TODO do damage
		}

		[Server]
		private void StepMove ()
		{
			//TODO: flugkurve?
			Vector3 movement = destination - transform.position;
			// Normalise the movement vector and make it proportional to the speed per second.
			movement = movement.normalized * speed * Time.deltaTime;

			if (movement.sqrMagnitude < (destination - transform.position).sqrMagnitude) {
				transform.position = transform.position + movement;
			} else {
				Attack ();
				transform.position = destination;
			}

		}

		void Update ()
		{
			// If we're on the server, calculate movement and send it through network
			if (isServer) {
				StepMove ();
			}
		}

	}
}

